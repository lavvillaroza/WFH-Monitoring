generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  EMPLOYEE
}

enum RequestStatus {
  PENDING
  APPROVED
  REJECTED
}

enum DTRProblemStatus {
  PENDING
  RESOLVED
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  employeeId String  @unique
  password  String
  name      String
  role      Role     @default(EMPLOYEE) 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  status    String
}

model EmployeeDetails {
  id            String   @id @default(uuid())
  name          String
  email         String   @unique @map("email")  
  employeeId    String   @unique
  position      String
  department    String
  contactNumber String?
  address       String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

}

model DailyTimeRecord {
  id          String   @id @default(uuid())
  date        DateTime @default(now())
  timeIn      DateTime
  timeOut     DateTime?  
  duration    Int?  
  remarks     String?    
  createdAt   DateTime @default(now())  
  updatedAt   DateTime @updatedAt  
  employeeId  String  

}

model DailyTimeRecordProblem {
  id          String   @id @default(uuid())
  date        DateTime
  type        String
  remarks     String
  status      DTRProblemStatus @default(PENDING)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  employeeId  String   

}

model Leave {
  id          String        @id @default(uuid())
  leaveType   String
  startDate   DateTime
  endDate     DateTime
  reason      String
  status      RequestStatus @default(PENDING)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  employeeId  String    

}

model Overtime {
  id          String        @id @default(uuid())
  date        DateTime
  startTime   DateTime
  endTime     DateTime
  duration    Int  
  reason      String
  status      RequestStatus @default(PENDING)
  approvedBy  String? 
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  employeeId  String 

}

model HumanActivityLog {
  id          String   @id @default(uuid())  
  activity    String   
  employeeId  String 
  timestamp   DateTime @default(now())  

}
